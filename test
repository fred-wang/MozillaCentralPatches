# HG changeset patch
# Parent ae7f5d73688c02ffd08ff53dd6785641850ba326
# User Frédéric Wang <fred.wang@free.fr>
xxx

diff --git a/layout/mathml/mathml.css b/layout/mathml/mathml.css
--- a/layout/mathml/mathml.css
+++ b/layout/mathml/mathml.css
@@ -273,17 +273,16 @@ mstyle[displaystyle="true"] {
    more efficient and less code. */
 :-moz-math-increment-script-level { -moz-script-level: +1; }
 
 /*
    The mfrac element sets displaystyle to "false", or if it was already false
    increments scriptlevel by 1, within numerator and denominator.
 */   
 mfrac > * {
-    -moz-script-level: auto;
     -moz-display-style: none;
 }
 
 /*
    The mroot element increments scriptlevel by 2, and sets displaystyle to
    "false", within index, but leaves both attributes unchanged within base.
    The msqrt element leaves both attributes unchanged within its argument.
 */
diff --git a/layout/mathml/nsMathMLmfracFrame.cpp b/layout/mathml/nsMathMLmfracFrame.cpp
--- a/layout/mathml/nsMathMLmfracFrame.cpp
+++ b/layout/mathml/nsMathMLmfracFrame.cpp
@@ -41,16 +41,25 @@ nsMathMLmfracFrame::GetMathMLFrameType()
 {
   // frac is "inner" in TeXBook, Appendix G, rule 15e. See also page 170.
   return eMathMLFrameType_Inner;
 }
 
 NS_IMETHODIMP
 nsMathMLmfracFrame::TransmitAutomaticData()
 {
+  // 1. The REC says:
+  //    The <mfrac> element sets displaystyle to "false", or if it was already
+  //    false increments scriptlevel by 1, within numerator and denominator.
+  // 2. The TeXbook (Ch 17. p.141) says the numerator inherits the compression
+  //    while the denominator is compressed
+  bool increment = !StyleFont()->mDisplayStyle;
+  SetIncrementScriptLevel(0, increment);
+  SetIncrementScriptLevel(1, increment);
+
   // The TeXbook (Ch 17. p.141) says the numerator inherits the compression
   //  while the denominator is compressed
   UpdatePresentationDataFromChildAt(1,  1,
      NS_MATHML_COMPRESSED,
      NS_MATHML_COMPRESSED);
 
   // if our numerator is an embellished operator, let its state bubble to us
   GetEmbellishDataFrom(mFrames.FirstChild(), mEmbellishData);
