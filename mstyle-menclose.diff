# HG changeset patch
# Parent 35643927fc00643adae74a5c1d803776bc84776c
# User Frédéric Wang <fred.wang@free.fr>
Support for attribute "notation" on mstyle (bug 569125). r=karlt

diff --git a/layout/mathml/nsMathMLmencloseFrame.cpp b/layout/mathml/nsMathMLmencloseFrame.cpp
--- a/layout/mathml/nsMathMLmencloseFrame.cpp
+++ b/layout/mathml/nsMathMLmencloseFrame.cpp
@@ -166,53 +166,47 @@ nsresult nsMathMLmencloseFrame::AddNotat
   return NS_OK;
 }
 
 /*
  * Initialize the list of notations to draw
  */
 void nsMathMLmencloseFrame::InitNotations()
 {
+  mNotationsToDraw = 0;
+  mLongDivCharIndex = mRadicalCharIndex = -1;
+  mMathMLChar.Clear();
+
   nsAutoString value;
 
-  if (mContent->GetAttr(kNameSpaceID_None, nsGkAtoms::notation_, value)) {
+  if (GetAttribute(mContent, mPresentationData.mstyle, nsGkAtoms::notation_,
+                   value)) {
     // parse the notation attribute
     nsWhitespaceTokenizer tokenizer(value);
 
     while (tokenizer.hasMoreTokens())
       AddNotation(tokenizer.nextToken());
   } else {
     // default: longdiv
     if (NS_FAILED(AllocateMathMLChar(NOTATION_LONGDIV)))
       return;
     mNotationsToDraw = NOTATION_LONGDIV;
   }
 }
 
 NS_IMETHODIMP
-nsMathMLmencloseFrame::Init(nsIContent*      aContent,
-                            nsIFrame*        aParent,
-                            nsIFrame*        aPrevInFlow)
-{
-  nsresult rv = nsMathMLContainerFrame::Init(aContent, aParent, aPrevInFlow);
-  NS_ENSURE_SUCCESS(rv, rv);
-
-  InitNotations();
-
-  return NS_OK;
-}
-
-NS_IMETHODIMP
 nsMathMLmencloseFrame::InheritAutomaticData(nsIFrame* aParent)
 {
   // let the base class get the default from our parent
   nsMathMLContainerFrame::InheritAutomaticData(aParent);
 
   mPresentationData.flags |= NS_MATHML_STRETCH_ALL_CHILDREN_VERTICALLY;
 
+  InitNotations();
+
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMathMLmencloseFrame::TransmitAutomaticData()
 {
   if (IsToDraw(NOTATION_RADICAL)) {
     // The TeXBook (Ch 17. p.141) says that \sqrt is cramped 
@@ -709,20 +703,16 @@ nsMathMLmencloseFrame::FixInterFrameSpac
 }
 
 NS_IMETHODIMP
 nsMathMLmencloseFrame::AttributeChanged(PRInt32         aNameSpaceID,
                                         nsIAtom*        aAttribute,
                                         PRInt32         aModType)
 {
   if (aAttribute == nsGkAtoms::notation_) {
-    mNotationsToDraw = 0;
-    mLongDivCharIndex = mRadicalCharIndex = -1;
-    mMathMLChar.Clear();
-    
     InitNotations();
   }
 
   return nsMathMLContainerFrame::
     AttributeChanged(aNameSpaceID, aAttribute, aModType);
 }
 
 //////////////////
diff --git a/layout/mathml/nsMathMLmencloseFrame.h b/layout/mathml/nsMathMLmencloseFrame.h
--- a/layout/mathml/nsMathMLmencloseFrame.h
+++ b/layout/mathml/nsMathMLmencloseFrame.h
@@ -99,21 +99,16 @@ public:
                    PRInt32         aModType);
   
   virtual void
   SetAdditionalStyleContext(PRInt32          aIndex, 
                             nsStyleContext*  aStyleContext);
   virtual nsStyleContext*
   GetAdditionalStyleContext(PRInt32 aIndex) const;
 
-  NS_IMETHOD
-  Init(nsIContent* aContent,
-       nsIFrame*   aParent,
-       nsIFrame*   aPrevInFlow);
-
   NS_IMETHOD BuildDisplayList(nsDisplayListBuilder*   aBuilder,
                               const nsRect&           aDirtyRect,
                               const nsDisplayListSet& aLists);
 
   NS_IMETHOD
   InheritAutomaticData(nsIFrame* aParent);
 
   NS_IMETHOD
diff --git a/layout/mathml/nsMathMLmsqrtFrame.cpp b/layout/mathml/nsMathMLmsqrtFrame.cpp
--- a/layout/mathml/nsMathMLmsqrtFrame.cpp
+++ b/layout/mathml/nsMathMLmsqrtFrame.cpp
@@ -80,15 +80,25 @@ nsMathMLmsqrtFrame::Init(nsIContent*    
   nsresult rv = nsMathMLContainerFrame::Init(aContent, aParent, aPrevInFlow);
   AllocateMathMLChar(NOTATION_RADICAL);
   mNotationsToDraw |= NOTATION_RADICAL;
 
   return rv;
 }
 
 NS_IMETHODIMP
+nsMathMLmsqrtFrame::InheritAutomaticData(nsIFrame* aParent)
+{
+  nsMathMLContainerFrame::InheritAutomaticData(aParent);
+
+  mPresentationData.flags |= NS_MATHML_STRETCH_ALL_CHILDREN_VERTICALLY;
+
+  return NS_OK;
+}
+
+NS_IMETHODIMP
 nsMathMLmsqrtFrame::AttributeChanged(PRInt32         aNameSpaceID,
                                      nsIAtom*        aAttribute,
                                      PRInt32         aModType)
 {
   return nsMathMLContainerFrame::
     AttributeChanged(aNameSpaceID, aAttribute, aModType);
 }
diff --git a/layout/mathml/nsMathMLmsqrtFrame.h b/layout/mathml/nsMathMLmsqrtFrame.h
--- a/layout/mathml/nsMathMLmsqrtFrame.h
+++ b/layout/mathml/nsMathMLmsqrtFrame.h
@@ -75,16 +75,19 @@ public:
                                           nsStyleContext* aContext);
 
   NS_IMETHOD
   Init(nsIContent* aContent,
        nsIFrame*   aParent,
        nsIFrame*   aPrevInFlow);
 
   NS_IMETHOD
+  InheritAutomaticData(nsIFrame* aParent);
+
+  NS_IMETHOD
   AttributeChanged(PRInt32         aNameSpaceID,
                    nsIAtom*        aAttribute,
                    PRInt32         aModType);
 
 protected:
   nsMathMLmsqrtFrame(nsStyleContext* aContext);
   virtual ~nsMathMLmsqrtFrame();
 };
